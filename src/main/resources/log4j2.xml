<?xml version="1.0" encoding="UTF-8"?>
<!-- 在运行时，可以动态修改配置文件，不用重启服务，在固定时长更新一次配置文件。monitorInterval设置更新配置文件时长， 单位为seconds ， min senconds >= 5secondes -->
<Configuration status="off" monitorInterval="1800">
<Appenders>
    <Console name="console" target="SYSTEM_OUT">
        <PatternLayout charset="UTF-8" pattern="%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n" />
    </Console>
    <File name="out" fileName="logs/out.log" append="false">
        <PatternLayout charset="UTF-8" pattern="%d{HH:mm:ss:SSS} %-5level %class{36} %L %M - %msg%xEx%n"/>
    </File>
    <!--
        注意：一般情况下都使用RollingRandomAccessFile 。
        RollingRandomAccessFile可以按照日志名称的格式进行定期备份，拥有一定的备份策略。
        1.是否压缩备份日志：直接在filePattern属性的文件名称最后加对应的压缩后缀，如gzip压缩用 .gz
    -->
    <RollingRandomAccessFile name="info" fileName="logs/info.log" filePattern="logs/$${date:yyyy-MM}/error-%d{yyyy-MM-dd}-%i.log">
        <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
        <PatternLayout charset="UTF-8" pattern="[%d{HH:mm:ss:SSS}] [%p] - %logger%n     --- %l %m%n"/>
        <!-- 备份策略:满足其中一个就可以启动备份-->
        <Policies>
            <!-- interval 多久执行一次备份，单位为 RollingRandomAccessFile的属性filePattern中%d{yyyy-MM-dd}的最小时间单位，此处是天-->
            <TimeBasedTriggeringPolicy  interval="1"  modulate="true"/>
            <SizeBasedTriggeringPolicy size="250 MB"/>
        </Policies>
    </RollingRandomAccessFile>
    <RollingRandomAccessFile name="error" fileName="logs/error.log" filePattern="logs/$${date:yyyy-MM}/error-%d{yyyy-MM-dd}-%i.log">
        <ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>
        <PatternLayout charset="UTF-8" pattern="[%d{HH:mm:ss:SSS}] [%p] - %logger%n     --- %l %m%n"/>
        <!-- 备份策略:满足其中一个就可以启动备份-->
        <Policies>
            <!-- interval 多久执行一次备份，单位为 RollingRandomAccessFile的属性filePattern中%d{yyyy-MM-dd}的最小时间单位，此处是天-->
            <TimeBasedTriggeringPolicy  interval="1"  modulate="true"/>
            <SizeBasedTriggeringPolicy size="250 MB"/>
        </Policies>
    </RollingRandomAccessFile>

    <!-- 异步 appder  ,使用的是ArrayBlocingQueue -->
    <Async name="Async">
        <AppenderRef ref="info"/>
        <AppenderRef ref="error"/>
    </Async>

</Appenders>
<Loggers>
    <logger name="org.springframework" level="debug"/>
    <logger name="org.apache" level="debug"/>
    <logger name="org.mybatis" level="debug"/>
    <logger name="com.mysql" level="debug"/>

    <Root level="debug">
        <AppenderRef ref="console" />
        <AppenderRef ref="out" />
        <AppenderRef ref="info" />
        <AppenderRef ref="error" />
    </Root>
</Loggers>
</Configuration>